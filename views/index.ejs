<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>InkSphere Blog & Chat</title>
    <style>
        * { margin:0; padding:0; box-sizing:border-box; }
        body { font-family: Arial, sans-serif; background:#f4f4f9; }

        /* Navbar */
        .navbar { background:#fff; padding:1rem 2rem; display:flex; justify-content:space-between; align-items:center; box-shadow:0 2px 10px rgba(0,0,0,0.1); position:sticky; top:0; z-index:1000; }
        .navbar .logo { font-weight:bold; color:#3498db; font-size:1.5rem; text-decoration:none; }
        .nav-links { display:flex; gap:1rem; align-items:center; }
        .nav-links a { text-decoration:none; color:#333; font-weight:500; }
        .nav-links a:hover { color:#3498db; }

        /* Hero */
        .hero { height:30vh; background: linear-gradient(rgba(0,0,0,0.2), rgba(0,0,0,0.2)), url('https://images.unsplash.com/photo-1439066615861-d1af74d74000?ixlib=rb-4.0.3&auto=format&fit=crop&w=2070&q=80'); background-size:cover; display:flex; justify-content:center; align-items:center; color:#fff; text-align:center; }
        .hero h1 { font-size:2.5rem; margin-bottom:0.5rem; }
        .hero p { font-size:1.2rem; opacity:0.9; }

        /* Blogs */
        .blog-section { max-width:1200px; margin:2rem auto; padding:0 1rem; }
        .blog-list { display:grid; grid-template-columns:repeat(auto-fill,minmax(300px,1fr)); gap:1.5rem; }
        .blog-card { background:#fff; padding:1rem; border-radius:10px; box-shadow:0 2px 10px rgba(0,0,0,0.1); display:flex; flex-direction:column; }
        .blog-card img { width:100%; border-radius:8px; margin-bottom:0.5rem; }
        .blog-card h2 { font-size:1.2rem; margin-bottom:0.5rem; }
        .blog-card p { flex-grow:1; margin-bottom:0.5rem; }
        .blog-card a { color:#3498db; text-decoration:none; font-weight:500; }

        /* Chat Sidebar */
        .chat-toggle { position:fixed; bottom:25px; right:25px; width:60px; height:60px; border-radius:50%; background:#3498db; color:#fff; display:flex; justify-content:center; align-items:center; font-size:1.5rem; cursor:pointer; z-index:2000; }
        .chat-sidebar { position:fixed; right:-350px; top:0; width:350px; height:100%; background:#fff; box-shadow:-2px 0 10px rgba(0,0,0,0.1); transition:right 0.3s; display:flex; flex-direction:column; z-index:2500; }
        .chat-sidebar.active { right:0; }
        .chat-header { padding:1rem; background:#3498db; color:#fff; display:flex; justify-content:space-between; align-items:center; }
        .chat-header button { background:none; border:none; font-size:1.5rem; color:#fff; cursor:pointer; }
        .chat-list { flex-grow:1; overflow-y:auto; }
        .chat-user { display:flex; align-items:center; padding:0.5rem 1rem; cursor:pointer; border-bottom:1px solid #f0f0f0; }
        .chat-user:hover { background:#f9f9f9; }
        .chat-user .avatar { width:40px; height:40px; border-radius:50%; margin-right:0.5rem; position:relative; display:flex; justify-content:center; align-items:center; font-size:1rem; color:#fff; background:#3498db; }
        .chat-user .status-dot { position:absolute; bottom:0; right:0; width:10px; height:10px; border-radius:50%; border:2px solid #fff; }
        .status-online { background:#2ecc71; }
        .status-offline { background:#ccc; }
        .chat-messages { flex-grow:1; overflow-y:auto; padding:0.5rem; background:#e5ddd5; }
        .message { margin:0.5rem 0; display:flex; }
        .message.self { justify-content:flex-end; }
        .message.self p { background:#25d366; color:#fff; }
        .message.other p { background:#fff; color:#333; }
        .message p { padding:0.5rem 1rem; border-radius:20px; max-width:70%; }
        .chat-input { display:flex; padding:0.5rem; border-top:1px solid #ddd; }
        .chat-input input { flex-grow:1; padding:0.5rem 1rem; border-radius:20px; border:1px solid #ccc; outline:none; }
        .chat-input button { margin-left:0.5rem; padding:0.5rem 1rem; border:none; border-radius:20px; background:#3498db; color:#fff; cursor:pointer; }
    </style>
</head>
<body>

<!-- Navbar -->
<nav class="navbar">
    <a href="#" class="logo">InkSphere üåä</a>
    <div class="nav-links">
        <a href="#">Home</a>
        <a href="#blog">Blog</a>
        <a href="/create">Post</a>
        <% if(user){ %>
            <a href="/api/v1/user/logout">Logout</a>
        <% } else { %>
            <a href="/login">Login</a>
            <a href="/signup">Signup</a>
        <% } %>
    </div>
</nav>

<!-- Hero -->
<section class="hero">
    <div>
        <h1>Welcome to InkSphere</h1>
        <p>Read blogs & chat with other users in real-time!</p>
    </div>
</section>

<!-- Blogs -->
<section class="blog-section" id="blog">
    <div class="blog-list">
        <% posts.forEach(post => { %>
            <div class="blog-card">
                <% if(post.image){ %><img src="<%= post.image %>" alt=""><% } %>
                <h2><%= post.title %></h2>
                <p><%= post.content.substring(0,100) %>...</p>
                <a href="/single/<%= post._id %>">Read More</a>
            </div>
        <% }) %>
    </div>
</section>

<!-- Chat Sidebar -->
<div class="chat-sidebar" id="chatSidebar">
    <div class="chat-header">
        <h3>üí¨ Chats</h3>
        <button id="closeChat">√ó</button>
    </div>
    <div class="chat-list" id="chatUsers"></div>
    <div class="chat-messages" id="chatMessages"></div>
    <div class="chat-input">
        <input type="text" id="chatInput" placeholder="Type a message...">
        <button id="sendBtn">Send</button>
    </div>
</div>

<!-- Toggle Button -->
<div class="chat-toggle" id="chatToggle">üí¨</div>

<script src="/socket.io/socket.io.js"></script>
<script>
    const socket = io();
    const CURRENT_USER_ID = "<%= user?._id %>";
    const CURRENT_USERNAME = "<%= user?.username %>";

    if(CURRENT_USER_ID){
        socket.emit("userOnline", { userId: CURRENT_USER_ID, username: CURRENT_USERNAME });
    }

    const chatSidebar = document.getElementById("chatSidebar");
    document.getElementById("chatToggle").onclick = () => chatSidebar.classList.add("active");
    document.getElementById("closeChat").onclick = () => chatSidebar.classList.remove("active");

    let selectedUserId = null;

    socket.on("onlineUsers", users => {
        const container = document.getElementById("chatUsers");
        container.innerHTML = "";

        // Global Chat
        const globalDiv = document.createElement("div");
        globalDiv.classList.add("chat-user");
        globalDiv.innerHTML = `
        <div class="avatar">üåê</div>
        <div class="user-info"><span class="username">Global Chat</span></div>
    `;
        globalDiv.onclick = () => selectUser(null, "Global");
        container.appendChild(globalDiv);

        users.forEach(u => {
            if(u.user._id !== CURRENT_USER_ID){
                const div = document.createElement("div");
                div.classList.add("chat-user");
                div.innerHTML = `
                <div class="avatar">
                    ${u.user.username[0].toUpperCase()}
                    <span class="status-dot ${u.socketId ? 'status-online' : 'status-offline'}"></span>
                </div>
                <div class="user-info">
                    <span class="username">${u.user.username}</span>
                </div>
            `;
                div.onclick = () => selectUser(u.user._id, u.user.username);
                container.appendChild(div);
            }
        });
    });

    function selectUser(userId, username){
        selectedUserId = userId;
        document.getElementById("chatMessages").innerHTML = "";
        const url = userId ? `/api/v1/message/user/${userId}` : `/api/v1/message/all`;

        fetch(url)
            .then(res => res.json())
            .then(data => {
                data.messages.forEach(m => renderMessage(
                    m.sender._id === CURRENT_USER_ID ? "self" : "other",
                    m.content
                ));
            });
    }

    function renderMessage(type, content){
        const container = document.getElementById("chatMessages");
        const div = document.createElement("div");
        div.classList.add("message", type);
        div.innerHTML = `<p>${content}</p>`;
        container.appendChild(div);
        container.scrollTop = container.scrollHeight;
    }

    document.getElementById("sendBtn").onclick = () => {
        const input = document.getElementById("chatInput");
        if(input.value.trim()){
            socket.emit("sendMessage", {
                senderId: CURRENT_USER_ID,
                senderName: CURRENT_USERNAME,
                receiverId: selectedUserId,
                content: input.value
            });
            input.value = "";
        }
    };

    socket.on("newMessage", msg => {
        if(!msg.receiver && selectedUserId === null){
            renderMessage(msg.sender._id === CURRENT_USER_ID ? "self" : "other", msg.content);
        } else if(msg.sender._id === selectedUserId || msg.receiver?._id === selectedUserId){
            renderMessage(msg.sender._id === CURRENT_USER_ID ? "self" : "other", msg.content);
        }
    });
</script>
</body>
</html>
